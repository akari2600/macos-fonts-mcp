[project]
name = "macos-fonts-mcp"
version = "0.2.0"
description = "An MCP server for macOS font discovery, webfont conversion, and S3 publishing."
authors = [{ name = "You" }]
requires-python = ">=3.11"
dependencies = [
  "mcp>=1.2.0",
  "pyobjc-core",
  "pyobjc-framework-coretext",
  "pyobjc-framework-quartz",
  "fonttools[woff,woff2]>=4.53.0",
  "boto3>=1.34.0",
  "pydantic>=2.7.0",
  "uvloop; platform_system == 'Darwin'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.0.0",
    "rich>=13.0.0",
    "loguru>=0.7.0",
    "mypy>=1.5.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0"
]

[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
pythonpath = ["."]
asyncio_mode = "auto"
testpaths = ["tests"]
addopts = "--cov=macfonts --cov-report=html --cov-report=term-missing"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "CoreText.*",
    "CoreGraphics.*",
    "fontTools.*",
    "boto3.*",
    "botocore.*"
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["macfonts"]
omit = [
    "tests/*",
    "*/tests/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]